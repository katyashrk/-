using HotelEnd.gameobj;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace HotelEnd
{
    public partial class Form1 : Form
    {
        private Button startButton;
        public Form1()
        {
            InitializeComponent();
            InitializeGame();
            
        }
        private PictureBox backgroundPictureBox;

        //Image image = Properties.Resources.image;
        private void InitializeGame()
        {
            // Настройка формы
            this.Text = "Endless Hotel";
            this.Size = new Size(800, 600);
            startButton = new Button();
            startButton.Text = "Start Game";
            startButton.Image = image;

            // Кнопка
            startButton.ImageAlign = ContentAlignment.MiddleCenter;
            startButton.TextImageRelation = TextImageRelation.ImageBeforeText;
            startButton.Size = new Size(100, 100);
            startButton.Location = new Point(1200,500);
            startButton.Click += start_Click;
            this.Controls.Add(startButton);
            startButton.BringToFront();
            // Фоновая картинка
            backgroundPictureBox = new PictureBox();
            backgroundPictureBox.Image = Properties.Resources.background_image;
            backgroundPictureBox.Size = this.Size;

        }
        private void start_Click(object sender, EventArgs e)
        {
            Controls.Remove(startButton);
        }

        private PictureBox PlayerPictureBox;
        private PictureBox enemies;
        private PictureBox key;
        private int level = 1;
        private void OneKeyDown(object sender, KeyEventArgs e)
        {
           
            switch (e.KeyCode)
            {
                case Keys.W:
                    // Логика движения вперед
                    break;
                case Keys.S:
                    // Логика движения назад
                    break;
                case Keys.A:
                    PlayerPictureBox.Location = new Point(PlayerPictureBox.Location.X - 5, PlayerPictureBox.Location.Y);
                    break;
                case Keys.D:
                    PlayerPictureBox.Location = new Point(PlayerPictureBox.Location.X + 5, PlayerPictureBox.Location.Y);
                    break;
                    
            }
        }

        private int currentLevel = 1;
        private int maxLevel = 3; // Максимальное количество уровней

        public void CheckLevelCompletion()
        {
            if (IsLevelCompleted())
            {
                if (currentLevel < maxLevel)
                {
                    currentLevel++;
                    LoadNextLevel();
                }
                else
                {
                    // Игра завершена, нет больше уровней
                    ShowGameCompletionMessage();
                }
            }
        }
        private int keyAmount = 0;
        
        public bool IsLevelCompleted()
        {
            if (keyAmount == keyAmount + 1)
                return true;
            return false;
        }

        public void LoadNextLevel()
        {
            // Загрузка следующего уровня 
            // Обновление игровых объектов, настроек и параметров для нового уровня
        }

        public void ShowGameCompletionMessage()
        {
            // Показ сообщения об окончании игры
        }
    }
}
